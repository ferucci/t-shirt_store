@use './vars' as vars;

@mixin df($posX: center, $posY: center, $fd: initial) {
  display: flex;
  flex-direction: $fd;
  align-items: $posY;
  justify-content: $posX;
}

@mixin setStyleText($sfs: vars.$min-base-fs,
  $color: vars.$main-color,
  $size: vars.$middle-size-for-clamp,
  $lh: 130%, $fs: vars.$max-base-fs) {

  font-size: clamp($sfs, $size, $fs);
  line-height: $lh;
  color: $color;
}

@mixin prohTextWrapp() {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

@mixin elipsisMultiStroke($strNum: 1, $display: -webkit-box) {
  display: $display;
  -webkit-line-clamp: $strNum;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

@mixin font($fw: 400) {
  font-family: "Manrope", sans-serif;
  font-weight: $fw;
  font-optical-sizing: auto;
  font-style: normal;
}

@mixin button($p: .8rem 3rem .8rem 1rem, $bg: vars.$main-color) {
  display: inline-block;
  padding: $p;
  margin: 0;
  background: $bg;
  color: vars.$white;

  border-radius: .66rem;
  border: none;
  cursor: pointer;
}

@mixin cardBase($bg, $min-width: vars.$card-width) {
  background-color: $bg;
  min-width: $min-width;
  max-width: vars.$card-max-width;
  border-radius: 1.22rem;
}

@mixin buttonBefore($imageSrc: '../images/icons/arrow-rigth.svg') {
  &::before {
    content: "";
    position: absolute;
    right: 1rem;
    top: 50%;
    width: 1.25rem;
    height: 0.75rem;
    transform: translateY(-50%);
    background-image: url($imageSrc) no-repeat;
  }
}

@mixin activeBtnBurger() {
  &.active-btn {
    &>span:nth-child(1) {
      transform: rotate(-45deg) translateX(-25%);
    }

    &>span:nth-child(2) {
      display: none;
    }

    &>span:last-child {
      transform: rotate(45deg) translateX(-25%);
    }
  }
}