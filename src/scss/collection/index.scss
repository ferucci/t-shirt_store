@use '../vars' as vars;
@use '../mixins' as mixin;
@use '../mixins/media' as media;


@mixin descElemGridAdaptive {
  &>.collection__desc {
    grid-row: 1;
    grid-column: 1/3;

    @include media.sm {
      grid-row: auto;
      grid-column: auto;
    }
  }

  picture {
    grid-column: 2 / 3;

    @include media.sm {
      grid-column: auto;
    }
  }

  button {
    grid-row: 3;
    align-self: end;

    @include media.sm {
      grid-row: auto;
    }
  }

  @include media.lgd {
    grid-template-columns: 40% 60%;
    grid-column: auto;
    grid-row: auto;
    grid-auto-columns: max-content;
  }

  @include media.lg {
    grid-template-columns: 60% 40%;
  }
}

.collection {

  &__items {
    display: grid;
    grid-template: repeat(3, [row] 1fr) / repeat(4, [col] minmax(17rem, 30rem));
    gap: clamp(.66rem, 1.5vw, 1.22rem);

    @include media.lgd {
      grid-template: repeat(3, [row] 1fr) / repeat(3, [col] minmax(12rem, 25rem));
    }

    @include media.mds {
      grid-template: repeat(2, [row] 1fr) / repeat(2, [col] minmax(12rem, 25rem));
    }

    @include media.sm {
      grid-template: auto/repeat(1, [col] minmax(12rem, 25rem));
      position: relative;
    }
  }

  &__item:has(img):nth-child(4) {
    grid-template-columns: 6rem 1fr;
    grid-template-rows: auto;
    grid-column: col -1/span 1;
    grid-row: row 1/span 2;

    @include descElemGridAdaptive()
  }

  &__item:has(img):nth-child(5) {
    grid-template-columns: 6rem 1fr;
    grid-template-rows: auto;
    grid-column: col 1;
    grid-row: row 2/span 2;
    @include descElemGridAdaptive()
  }

  &__item:has(img) {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    grid-template-rows: 1fr 4rem;
    background-color: vars.$main-color;
    border-radius: 1.22rem;

    picture {
      grid-row: span 2;
    }

    img {
      border-top-right-radius: 1.22rem;
      border-bottom-right-radius: 1.22rem;
      height: 100%;
      object-fit: cover;
    }

    @include media.lg {
      grid-template-columns: 60% 40%;
      @include descElemGridAdaptive()
    }

  }

  &__popular {
    grid-column: 2/4;
    @include mixin.df($fd: column);
    gap: clamp(1.22rem, 1.5vw, 1.88rem);
    text-align: center;

    @include media.lgd {
      grid-column: 2;
      grid-row: 2;
    }

    @include media.mds {
      align-items: self-start;
      grid-column: 1/-1;
      grid-row: 3/-1;
    }

    @include media.sm {
      grid-column: 1/-1;
      grid-row: 1;
      text-align: start;

      &>button {
        position: absolute;
        bottom: -3.5rem;
        left: 50%;
        transform: translateX(-50%);
      }
    }
  }



  &__popular-title {
    @include mixin.setStyleText($sfs: 1.88rem, $fs: 2.2rem, $size: 4vw);
  }

  &__desc {
    padding: vars.$padding-container 0 0 vars.$padding-container;
  }

  &__name {
    color: vars.$white;
  }

  &__subtitle {
    color: vars.$grey-2;
    font-size: .77rem;
  }

  &__button {
    @include mixin.button(1.1rem 1.25rem, vars.$grey-1);
    width: fit-content;
    aspect-ratio: 1/1;
    position: relative;
    margin: 0 0 vars.$padding-container vars.$padding-container;

    &::before {
      content: "";
      position: absolute;
      right: 50%;
      top: 50%;
      width: 1.25rem;
      height: 0.75rem;
      transform: translate(50%, -50%);
      background-image: url(../images/icons/arrow-rigth.svg) no-repeat;
    }
  }
}